## Server port
server.port=${USERS_PORT}

## Application name
spring.application.name=user-service

## Eureka
eureka.client.service-url.default-zone=http://${EUREKA_URL}/${EUREKA_HOST}

## RabbitMQ
app.message=Message has been sent Successfully..
spring.rabbitmq.host=${RABBIT_MQ_HOST}
# spring.rabbitmq.password=guest
spring.rabbitmq.port=${RABBIT_MQ_PORT}
# spring.rabbitmq.username=guest
spring.rabbitmq.exchange=${RABBIT_MQ_EXCHANGE}
# spring.rabbitmq.queue=user.queue
spring.rabbitmq.routingkey=user.routingkey

## MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DATABASE}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Log
logging.group.rbac=com.giassi.microservice
logging.level.rbac=INFO

# Show or not log for each sql query
spring.jpa.show-sql=false

# enable initialization using schema.sql and data.sql
spring.datasource.initialize=true
spring.jpa.hibernate.ddl-auto=none
spring.datasource.initialization-mode=always

# Security

# password encryption
microservice.security.salt=WZeBXmCI9cAz3LyY9Sdllj9l5iPsXC